"""initial migrations

Revision ID: 1db8959deae5
Revises: 
Create Date: 2025-03-21 10:48:27.837469

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '1db8959deae5'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('permissions',
    sa.Column('permission_id', sa.UUID(), nullable=False),
    sa.Column('permission_name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('permission_id'),
    sa.UniqueConstraint('permission_name')
    )
    op.create_table('priorities',
    sa.Column('priority_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('priority_name', sa.String(length=50), nullable=False),
    sa.Column('priority_level', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('priority_id'),
    sa.UniqueConstraint('priority_level')
    )
    op.create_index(op.f('ix_priorities_priority_name'), 'priorities', ['priority_name'], unique=True)
    op.create_table('products',
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('product_id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_products_product_id'), 'products', ['product_id'], unique=False)
    op.create_table('roles',
    sa.Column('role_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('role_id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('role_id')
    )
    op.create_table('status',
    sa.Column('status_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('status_id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('super_admins',
    sa.Column('super_admin_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('super_admin_id'),
    sa.UniqueConstraint('email')
    )
    op.create_index(op.f('ix_super_admins_super_admin_id'), 'super_admins', ['super_admin_id'], unique=False)
    op.create_table('role_permissions',
    sa.Column('role_id', sa.UUID(), nullable=False),
    sa.Column('permission_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['permissions.permission_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['role_id'], ['roles.role_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('role_id', 'permission_id')
    )
    op.create_table('tenants',
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('super_admin_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['super_admin_id'], ['super_admins.super_admin_id'], ),
    sa.PrimaryKeyConstraint('tenant_id')
    )
    op.create_index(op.f('ix_tenants_tenant_id'), 'tenants', ['tenant_id'], unique=False)
    op.create_table('subscriptions',
    sa.Column('subscription_id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=False),
    sa.Column('end_date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['products.product_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.tenant_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('subscription_id')
    )
    op.create_index(op.f('ix_subscriptions_subscription_id'), 'subscriptions', ['subscription_id'], unique=False)
    op.create_table('users',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('role_id', sa.UUID(), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=False),
    sa.Column('last_name', sa.String(length=100), nullable=False),
    sa.Column('mobile_no', sa.String(length=15), nullable=True),
    sa.Column('job_title', sa.String(length=255), nullable=True),
    sa.Column('company_name', sa.String(length=255), nullable=True),
    sa.Column('company_size', sa.String(length=50), nullable=True),
    sa.Column('status', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['roles.role_id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.tenant_id'], ),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('user_id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('tickets',
    sa.Column('ticket_id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('assign_to', sa.UUID(), nullable=False),
    sa.Column('status_id', sa.Integer(), nullable=False),
    sa.Column('priority_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(length=1000), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['assign_to'], ['users.user_id'], ),
    sa.ForeignKeyConstraint(['priority_id'], ['priorities.priority_id'], ),
    sa.ForeignKeyConstraint(['status_id'], ['status.status_id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.tenant_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('ticket_id'),
    sa.UniqueConstraint('ticket_id')
    )
    op.create_table('comments',
    sa.Column('comment_id', sa.UUID(), nullable=False),
    sa.Column('text', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('ticket_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['ticket_id'], ['tickets.ticket_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('comment_id')
    )
    op.create_index(op.f('ix_comments_comment_id'), 'comments', ['comment_id'], unique=False)
    op.create_table('ticket_transfers',
    sa.Column('transfer_id', sa.UUID(), nullable=False),
    sa.Column('ticket_id', sa.UUID(), nullable=False),
    sa.Column('from_assignee', sa.UUID(), nullable=True),
    sa.Column('to_assignee', sa.UUID(), nullable=True),
    sa.Column('transfer_date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['from_assignee'], ['users.user_id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['ticket_id'], ['tickets.ticket_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['to_assignee'], ['users.user_id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('transfer_id')
    )
    op.create_index(op.f('ix_ticket_transfers_transfer_id'), 'ticket_transfers', ['transfer_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_ticket_transfers_transfer_id'), table_name='ticket_transfers')
    op.drop_table('ticket_transfers')
    op.drop_index(op.f('ix_comments_comment_id'), table_name='comments')
    op.drop_table('comments')
    op.drop_table('tickets')
    op.drop_table('users')
    op.drop_index(op.f('ix_subscriptions_subscription_id'), table_name='subscriptions')
    op.drop_table('subscriptions')
    op.drop_index(op.f('ix_tenants_tenant_id'), table_name='tenants')
    op.drop_table('tenants')
    op.drop_table('role_permissions')
    op.drop_index(op.f('ix_super_admins_super_admin_id'), table_name='super_admins')
    op.drop_table('super_admins')
    op.drop_table('status')
    op.drop_table('roles')
    op.drop_index(op.f('ix_products_product_id'), table_name='products')
    op.drop_table('products')
    op.drop_index(op.f('ix_priorities_priority_name'), table_name='priorities')
    op.drop_table('priorities')
    op.drop_table('permissions')
    # ### end Alembic commands ###
